1+1
1+1
getwed()
getwd()
getwd()
getwd()
getwd()
source('~/Trainings/AU20/Data/R case exercise/R.r')
products <- read.csv("Trainings/AU20/Data/R case exercise/R_demo.csv")
products
products$Product
products$PricePerUnit
products$PricePerUnit
products["PricePerUnit"]
products["PricePerUnit",7]
products[7,"PricePerUnit"]
products[7,1]
products[c(1,2)]
products[1,]
products[2,]
products[(1:10),]
length(products)
summary(products)
plot(products)
summary(products)
products$PricePerUnit > 10
products[products$PricePerUnit > 10,]
plot(summary(products))
products$Sales <- products$PricePerUnit * products$MonthlyDemand
products$Sales <- products$PricePerUnit * products$MonthlyDemand
products
products
products <- read.csv("Trainings/AU20/Data/R case exercise/R_demo.csv")
products$Sales <- products$PricePerUnit * products$MonthlyDemand
products <- read.csv("Trainings/AU20/Data/R case exercise/R_demo.csv")
products$Sales <- products$PricePerUnit * products$MonthlyDemand
products <- read.csv("Trainings/AU20/Data/R case exercise/R_demo.csv")
products$Sales <- products$PricePerUnit * products$MonthlyDemand
clear
cl
clc
clear screen
clear
customers <- read.delim("Trainings/AU20/Data/R case exercise/R_sample_file.txt")
View(products)
str(customers)
summary(customers)
add1 <- function(x) {x + 1}
add1(1)
add1(2)
add1(c(1,2,3))
add1("hello")
to_com <- function(x,y) {x*30 + 7.5*2.5}
to_cm <- function(x,y) {x*30 + 7.5*2.5}
rm(to_com)
to_cm(1,1)
to_cm(5,7/5)
to_cm(5,7.5)
to_cm(list(c(1,2),c(2,3)))
to_cm((c(1,2),c(2,3)))
to_cm(c(1,2))
to_cm(1)
to_cm(1,0)
to_cm(list(c(1,2)))
to_cm(list(1,2))
to_cm <- function(x,y) {x*30 + y*2.5}
to_cm(list(1,2))
to_cm(1,0)
to_cm(1)
to_cm(list(1,2))
to_cm(list(c(1,2)))
?lapply
install.packages("dplyr")
install.packages("ggplot2")
x <- rnorm(1000)
df <- data.frame(x = x)
df
df$y <- rbinom(1000)
df$y <- rbinom(1000,1,0.5)
df
ggplot(data = df$x) + geom_histogram(aes(x=x))
# Set Options ---------------------------------------------------------------
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
GetYahooData('AAPL')
errorFlag = 0
GetYahooData('AAPL')
GetYahooData <- function(stock = "%5ENSEI",
start.date = "2010-01-01",
freq = "d",
intraday = FALSE,
intraLength = "5d") {
# Set Options ---------------------------------------------------------------
options(show.error.messages = F)
options(warn = -1)
errorFlag = 0
# Dates ---------------------------------------------------------------------
start.date = as.Date(start.date)   #  Format should be "YYYY-mm-dd"
end.date = Sys.Date()              #  Auto current date
# If not Intraday -----------------------------------------------------------
if (intraday == FALSE) {
# Create URL
a = as.numeric(format(start.date, "%d"))
b = as.numeric(format(start.date, "%m"))
c = as.numeric(format(start.date, "%Y"))
d = as.numeric(format(end.date, "%d"))
e = as.numeric(format(end.date, "%m"))
f = as.numeric(format(end.date, "%Y"))
part1 = 'http://real-chart.finance.yahoo.com/table.csv?s='
part2 = paste0('&a=',a,"&",
'b=',b,"&",
'c=',c,"&",
'd=',d,"&",
'e=',e,"&",
'f=',f,"&",
'g=',freq,"&",
"ignore=.csv")
URL = paste0(part1, stock, part2)
# Simply read as csv from URL
dat = try(read.csv(URL, stringsAsFactors = F), silent = T)
# If Error, flag it
if (class(dat) == "try-error") {
errorFlag = 1
}
}
# If Intraday ---------------------------------------------------------------
if (intraday == TRUE) {
# Create URL
part1 = "http://chartapi.finance.yahoo.com/instrument/1.0/"
part2 = paste0("/chartdata;type=quote;range=", intraLength, "/csv/")
URL = paste0(part1, stock, part2)
# Read each line separately as text
dat = readLines(URL)
# If no error, run code
if (length(dat) > 4) {
# Get the column names
n = as.numeric(unlist(strsplit(intraLength, "d")))
n = ifelse(n == 1, 12, 12 + n)
col.names = (unlist(strsplit(dat[n], ":"))[2])
col.names = unlist(strsplit(col.names, ","))
# Remove the first few unnecessary rows
dat = dat[(n + 6):length(dat)]
# Convert the vector of strings into a vector of numbers
dat = as.numeric(unlist(strsplit(dat, ",")))
# Create a matrix and add column names
dat = matrix(dat, ncol = 6, byrow = T)
colnames(dat) = col.names
# Add Row Names
dat = data.frame(Date = dat[,1], dat[,-1])
}
else {
# If error flag it
errorFlag = 1
}
}
# Print errors etc ----------------------------------------------------------
if (errorFlag == 1) {
print("Data pull unsuccessful. Check Stock Code...")
dat = NULL
}
else {
print("Data pull successful...")
}
# Fix options back to original ----------------------------------------------
options(show.error.messages = T)
options(warn = 1)
# Return data ---------------------------------------------------------------
return(dat)
}
GetYahooData('AAPL')
source('~/.active-rstudio-document', echo=TRUE)
install.package(dplyr)
install.packages(dplyr)
install.packages('dplyr')
source('~/.active-rstudio-document', echo=TRUE)
install.packages('tidyr')
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
clc
clear
View(cars)
View(mtcars)
view(iris)
View(iris)
View(pressure)
View(tb)
tb
select(tb, child:elderly)
library(dplyr)
select(tb, child:elderly)
tb
diamonds
View(diamonds)
View('diamonds')
library(ggplot2)
diamonds
tbl_df(diamonds)
tbl_df(diamonds)
tbl_df(diamonds)
mean(diamonds$x)
diamonds$x >%> mean()
diamonds$x %>% mean()
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
round(diamonds$x, 0)
mean(round(diamonds$x, 0))
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
install.packages('devtools')
devtools::install_github("rstudio/EDAWR")
?storms
storms
library(EDAWR)
?storms
storms
pollution
tb
cases
storms
tb
?tb
tb
tbl_df(tb)
storms
storms$pressure / storms$wind
storms$var = storms$pressure / storms$wind
storms
library(tidyr)
?gather
cases
gather(cases, year)
gather(cases, country, year)
cases
gather(storms, year, cases)
gather(cases, year, case)
gather(cases, year, cases)
gather(cases, "year","n")
gather(cases, "year","n", 2:4)
?spread
pollution
spread(pollution, size, amount, 2:4)
spread(pollution, 'size', amount, 2:4)
spread(pollution)
storms
separate(storms, date, c("year","month","day"),sep="-")
storms2 = separate(storms, date, c("year","month","day"),sep="-")
storms2
storms2[c(TRUE)]
storms2[c(True)]
storms2[c(TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,FALSE)]
storms2 <- storms2[c(TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,FALSE)]
unite(storms2, col = c("year","month","day"), sep = "/")
unite(storms2, year, month, day, sep = "/")
unite(storms2, "date", year, month, day, sep = "/")
unite(storms2, "date", day, month, year, sep = "/")
pollution
spread(pollution, size, amount)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
library(nycflights13)
install.packages('nycflights13')
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
select(storms, pressure)
storms
select(storms, storm, pressure, date)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
storms
select(storms, contains('o'))
storms
nycflights13
filter(storms, wind>100)
filter(storms, wind>50, storm %in% c("Alberto"))
mutate(storms, ratio=wind/pressure)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
mutate(storms, max=pmax(pressure))
mutate(storms, max=pmax(pressure, wind)
)
mutate(storms, max=pmin(pressure, wind))
mutate(storms, max=cumsum(pressure))
mutate(storms, max=cume_dist(pressure))
mutate(storms, max=ntile(pressure))
mutate(storms, max=ntile(pressure,10))
mutate(storms, max=ntile(pressure,2))
mutate(storms, max=ntile(wind,2))
summarise(pollution, median=median(pressure))
summarise(pollution, median = median(pressure))
summarise(pollution, median = mean(pressure))
pollution
summarise(pollution, median=median(amount))
summarise(pollution, median=n())
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
%>%
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
tb
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
tb
gather(tb, age_group, cases, 4:6)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/wrangling_tests.r', echo=TRUE)
y <- c(1,2,3)
x <- c(4,5,6)
y
x
bind_cols(x,y)
df(y)
?df
?create dataframe
df = data.frame(x,y)
df
df1
df <- data.frame(x)
df2 <- data.frame(y)
col_binds(df, df2)
bind_cols(df, df2)
bind_rows(df, df2)
union(df, df2)
glimpse(tb)
?glimpse
str(tb)
glimpse(tb)
read.csv('refine.csv')
read.csv('refine.csv',r)
read.csv('refine.csv','r')
read.csv('refine.csv')
setwd("~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1")
read.csv('refine.csv')
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
str(df)
glimpse(df)
df$company
lower('HELLO')
lowercase('HE')
tolower("HE")
tolower(df$company)
factor
mutate(df, company = tolower(company))
str(df)
glimpse(df)
df <- mutate(df, company = tolower(company))
df
glimpse(df)
str(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
tbl_df(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
comp
names(recode)
levels
recode
df$company
df
comp
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
comp
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
comp
factor(df$company)
levels(df$company)
f <- factor(df$company)
f
levels(f) <- c("akzo", "akzo", "akzo", "philips")
levels(f) <- c("akzo", "akzo", "akzo", "philips")
rep("philips",3)
c(rep("akzo",2),rep("philips",3))
str(c(rep("akzo",2),rep("philips",3)))
length(c(rep("akzo",2),rep("philips",3)))
f
str(f)
levels(f)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
factors
df$company
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df$company
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
df$company
str(df)
glimpse(df)
tbl_df(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
glimpse(df)
factor(df$product_code)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
factor(df$product_code)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
df$product_code
p <- df$product_code
p
factor(p)
levels(p)
p <- factor(p)
levels(p)
levels(p) <- c("smartphone","tablet",'TV','laptop')
p
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
str(df)
glimpse(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
glimpse(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
levels(df$product_code)
factor(df$product_code)
f <- factor(df$product_code)
f
levels(f)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
levels(df$product_type)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
glimpse(df)
var <- 'product_type'
df$var
df[var]
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
glimpse(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
glimpse(df)
df['company']
levels(df['company'])
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
factor(df['company'])
factor(df$company)
sort(df['company'])
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
glimpse(df)
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
df
paste('a','b')
paste('a',' b')
paste('a','b')
len(paste('a','b'))
length(paste('a','b'))
v <- paste('a','b')
length(v)
strlen(v)
v[1]
v[[1]]
v[1][1]
source('~/Coding/Springboard/Chapter 3 - Data wrangling/exercise 1/exercise1.r', echo=TRUE)
glimpse(df)
write.csv(df, 'refine_output.csv')
